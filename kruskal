import networkx as nx
import matplotlib.pyplot as plt

G=nx.Graph()
c= int(input("enter edge number"))
source_ver = [1,1,1,2,3,3,4,4,4,6,6,7]
dest_ver = [3,4,2,5,4,6,2,5,7,7,4,5]
wts = [4,1,3,10,2,5,3,7,4,1,8,6]
for i in range(0,c):
#   a=str(input("enter source vertex"))
#   b=str(input("enter destination vertex"))
#   d=int(input("enter weight"))
  a = source_ver[i]
  b = dest_ver[i]
  d = wts[i]
  G.add_edge(a,b,weight=d)
  source_ver.append(a)
  dest_ver.append(b)
  wts.append(d)
pos=nx.spring_layout(G)
nx.draw(G,pos,with_labels=True)
nx.draw_networkx_edge_labels(G,pos,edge_labels={(u, v): G[u][v]['weight'] for u, v in G.edges()})
plt.show()

mst=nx.minimum_spanning_tree(G)
pos2=nx.spring_layout(mst)
nx.draw(mst,pos2,with_labels=True)
nx.draw_networkx_edge_labels(mst,pos2,edge_labels={(u,v): mst[u][v]['weight'] for u,v in mst.edges()})
plt.show()
f=0
for u,v in mst.edges():
    f+=mst[u][v]['weight']
    print(u,"-",v,":" ,mst[u][v]['weight'])
print(f)
